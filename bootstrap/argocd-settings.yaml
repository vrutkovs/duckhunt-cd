apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  name: openshift-gitops
  namespace: openshift-gitops
  labels:
    app.kubernetes.io/instance: openshift-gitops
spec:
  server:
    route:
      annotations: {}
      enabled: true
      path: /
      TLS:
        insecureEdgeTerminationPolicy: Redirect
        termination: passthrough
      wildcardPolicy: None
    insecure: false
    resources: {}
  dex:
    openShiftOAuth: true
  rbac:
    defaultPolicy: 'role:admin'
  resourceCustomizations: |
    route.openshift.io/Route:
      ignoreDifferences: |
        jsonPointers:
        - /spec/host
    image.openshift.io/ImageStream:
      ignoreDifferences: |
        jqPathExpressions:
        - .spec.tags[]?.generation
        - .spec.tags[]?.annotations
  resourceExclusions: |
    - apiGroups:
      - tekton.dev
      clusters:
      - '*'
      kinds:
      - PipelineRun
      - TaskRun
  resource.customizations.health.build.dev_BuildRun: |
    hs = {}
    if obj.status ~= nil then
      if obj.status.succeeded == "Unknown" then
        hs.status = "Progressing"
        hs.message = "Waiting for build to complete"
        return hs
      end
      for i, condition in ipairs(obj.status.conditions) do
        if condition.type == "Succeeded" and condition.status == "False" then
          hs.status = "Degraded"
          hs.message = condition.message
          return hs
        end
        if condition.type == "Succeeded" and condition.status == "True" then
          hs.status = "Healthy"
          hs.message = condition.message
          return hs
        end
      end
    end
